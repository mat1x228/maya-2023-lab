global proc createStairs(int $stepNumber, float $stepW, float $stepH, float $stepD, float $railingH, float $railingR, float $handrailR){    float $offset = $stepW / 2 - 0.5;    float $minusOffset = -1 * $offset;	    string $obj[];	string $rel[];	if(`objExists stairs`){		select -r stairs;		$rel = `listRelatives -c -f`;		if(`objExists $rel[0]`){			for($part in $rel){				delete $part;			}		}	}	else{		group -em -n stairs;	}	    for($i=0; $i<$stepNumber; $i++){        float $hOffset = $i * $stepH + $stepH / 2;        float $dOffset = $i * $stepD;		        $obj = `polyCube -w $stepW -h $stepH -d $stepD -sx 1 -sy 1 -sz 1 -ax 0 1 0 -cuv 4 -ch 1`;        move 0 $hOffset $dOffset;		parent $obj[0] stairs;		        float $j = ($i + 1) * $stepH + $railingH / 2;                $obj = `polyCylinder -r $railingR -h $railingH -sx 20 -sy 1 -sz 1 -ax 0 1 0 -rcp 0 -cuv 3 -ch 1`;        move $offset $j $dOffset;		parent $obj[0] stairs;		        $obj = `polyCylinder -r $railingR -h $railingH -sx 20 -sy 1 -sz 1 -ax 0 1 0 -rcp 0 -cuv 3 -ch 1`;        move $minusOffset $j $dOffset;		parent $obj[0] stairs;    }    float $r = rad_to_deg(atan($stepD / $stepH));    float $height = sqrt(pow($stepD * $stepNumber , 2) + pow($stepH * $stepNumber , 2));        float $dRailOffset = $stepD * $stepNumber / 2 - $stepD / 2;    float $hRailOffset = $stepH * $stepNumber / 2 + $railingH + $stepH / 2;         $obj = `polyCylinder -r $handrailR -h $height -sx 20 -sy 1 -sz 1 -ax 0 1 0 -rcp 0 -cuv 3 -ch 1`;    move $offset $hRailOffset $dRailOffset;    rotate $r 0 0;	parent $obj[0] stairs;    $obj = `polyCylinder -r $handrailR -h $height -sx 20 -sy 1 -sz 1 -ax 0 1 0 -rcp 0 -cuv 3 -ch 1`;    move $minusOffset $hRailOffset $dRailOffset;    rotate $r 0 0;	parent $obj[0] stairs;}